{"version":3,"sources":["Header.js","MenuItem.js","Menu.js","HeaderBlock.js","ButtonPrimary.js","ButtonSecondary.js","firebase.js","features/userSlice.js","Login.js","Signup.js","Car.js","TeslaAccount.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","menuopen","Setmenuopen","className","to","src","alt","onClick","MenuItem","title","Menu","HeaderBlock","ButtonPrimary","name","type","ButtonSecondary","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Login","useState","email","Setemail","password","Setpassword","dispatch","useDispatch","history","useHistory","htmlFor","id","value","onChange","e","target","preventDefault","signInWithEmailAndPassword","then","userAuth","uid","displayName","push","catch","error","alert","message","Signup","setEmail","setPassword","fName","setFName","lName","setLName","createUserWithEmailAndPassword","updateProfile","Car","imgSrc","model","testDrive","TeslaAccount","isMenuOpen","setIsMenuOpen","useSelector","logoutOfApp","signOut","App","useEffect","onAuthStateChanged","exact","path","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60b0eb9b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nfunction Header({ menuopen, Setmenuopen}) {\r\n  return (\r\n    <div className='header'>\r\n      <div className='header__logo'>\r\n        <Link to='/'>\r\n          <img\r\n            className='header__logoImg'\r\n            src='https://assets.website-files.com/5e8fceb1c9af5c3915ec97a0/5ec2f037975ed372da9f6286_Tesla-Logo-PNG-HD.png'\r\n            alt=''\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className='header__links'>\r\n        <Link to='/'>Model S</Link>\r\n        <Link to='/'>Model 3</Link>\r\n        <Link to='/'>Model X</Link>\r\n        <Link to='/'>Model Y</Link>\r\n        <Link to='/'>Solar Roof</Link>\r\n        <Link to='/'>Solar Panels</Link>\r\n      </div>\r\n      <div className='header__right'>\r\n        <Link to='/' className={menuopen && 'header__link--hidden'}>\r\n          Shop\r\n        </Link>\r\n        <Link to='/login' className={menuopen && 'header__link--hidden'}>\r\n          Tesla Account\r\n        </Link>\r\n        <div\r\n          className='header__menu'\r\n          onClick={() => Setmenuopen(!menuopen)}\r\n        >\r\n          {menuopen ? <CloseIcon /> : <MenuIcon />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './MenuItem.css'\r\n\r\nfunction MenuItem({ title }) {\r\n  return (\r\n    <div className='menuItem'>\r\n      <h4>{title}</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MenuItem","import React from 'react'\r\nimport MenuItem from './MenuItem'\r\nimport './Menu.css'\r\n\r\nfunction Menu() {\r\n  return (\r\n    <div className='menu'>\r\n      <MenuItem title='existing inventory' />\r\n      <MenuItem title='used inventory' />\r\n      <MenuItem title='trade-in' />\r\n      <MenuItem title='cybertruck' />\r\n      <MenuItem title='roadster' />\r\n      <MenuItem title='semi' />\r\n      <MenuItem title='charging' />\r\n      <MenuItem title='powerwall' />\r\n      <MenuItem title='commercial solar' />\r\n      <MenuItem title='test drive' />\r\n      <MenuItem title='find us' />\r\n      <MenuItem title='support' />\r\n      <MenuItem title='united states' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport './HeaderBlock.css'\r\n\r\nfunction HeaderBlock() {\r\n  return (\r\n    <div className='headerBlock'>\r\n      <div className='headerBlock__info'>\r\n        <div className='headerBlock__infoText'>\r\n          <h1>Model 3</h1>\r\n          <h4>\r\n            Order Online for <span>Touchless Delivery</span>\r\n          </h4>\r\n        </div>\r\n        <div className='headerBlock__actions'>\r\n          <button className='headerBlock__buttonPrimary'>custom order</button>\r\n          <button className='headerBlock__buttonSecondary'>\r\n            existing inventory\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeaderBlock","import React from 'react'\r\n\r\nfunction ButtonPrimary({name, type, onClick}) {\r\n    return (\r\n        <button className='buttonPrimary' onClick={onClick} type={type}>\r\n      {name}\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default ButtonPrimary\r\n","import React from 'react'\r\nimport './ButtonSecondar.css'\r\n\r\nfunction ButtonSecondary({ name, type, onClick }) {\r\n  return (\r\n    <button className='buttonSecondary' type={type} onClick={onClick}>\r\n      {name}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default ButtonSecondary","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC450epwxyDKiYchKQVpzr0ZkexJ_YZesw\",\r\n    authDomain: \"tesla-clone-449bc.firebaseapp.com\",\r\n    projectId: \"tesla-clone-449bc\",\r\n    storageBucket: \"tesla-clone-449bc.appspot.com\",\r\n    messagingSenderId: \"461451816220\",\r\n    appId: \"1:461451816220:web:1bdcae9719828ff1029ed9\",\r\n    measurementId: \"G-VL5L9GYQG4\"\r\n}\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst auth = firebaseApp.auth()\r\n\r\nexport { auth }","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n    logout: (state) => {\r\n      state.user = null\r\n    },\r\n  },\r\n})\r\n\r\nexport const { login, logout } = userSlice.actions\r\n\r\n\r\nexport const selectUser = (state) => state.user.user\r\n\r\nexport default userSlice.reducer","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport './Login.css'\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport ButtonPrimary from './ButtonPrimary';\r\nimport ButtonSecondary from './ButtonSecondary';\r\nimport { useDispatch } from 'react-redux'\r\nimport { auth } from './firebase';\r\nimport { login } from './features/userSlice';\r\nfunction Login() {\r\n    const [email, Setemail] = useState('')\r\n  const [password, Setpassword] = useState('')\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault()\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userAuth) => {\r\n        dispatch(\r\n          login({\r\n            email: userAuth.user.email,\r\n            uid: userAuth.user.uid,\r\n            displayName: userAuth.user.displayName,\r\n          })\r\n        )\r\n        history.push('/teslaaccount')\r\n      })\r\n      .catch((error) => alert(error.message))\r\n  }\r\n        return (\r\n        \r\n        <div className='login'>\r\n         <div className='login_header'>\r\n             <div className ='login_logo'>\r\n                 <Link>\r\n                 <img\r\n                   src='https://assets.website-files.com/5e8fceb1c9af5c3915ec97a0/5ec2f037975ed372da9f6286_Tesla-Logo-PNG-HD.png'\r\n                      alt=''\r\n                      />\r\n                 </Link>\r\n             </div>\r\n             <div className ='login__language'>\r\n              <LanguageIcon/> <span>en-US</span>\r\n             </div>\r\n         </div>\r\n          <div className='login__info'>\r\n              <h1>Sign In</h1>\r\n              <form className='login__form'>\r\n          <label htmlFor='email'>Email Address</label>\r\n          <input\r\n            id='email'\r\n            type='email'\r\n            value={email}\r\n            onChange={(e) => Setemail(e.target.value)}\r\n          />\r\n          <label htmlFor='password'>Password</label>\r\n          <input\r\n            id='password'\r\n            type='password'\r\n            value={password}\r\n            onChange={(e) => Setpassword(e.target.value)}\r\n          />\r\n         <ButtonPrimary name='Sign In' type='submit' onClick={signIn} />\r\n        </form>\r\n        <div className='login__divider'>\r\n          <hr /> <span>OR</span> <hr />\r\n        </div>\r\n        <Link to='/signup'>\r\n          <ButtonSecondary name='create account' />\r\n        </Link>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState ,  } from 'react'\r\nimport { Link , useHistory} from 'react-router-dom'\r\nimport LanguageOutlinedIcon from '@material-ui/icons/LanguageOutlined'\r\nimport './Signup.css'\r\nimport { auth } from './firebase'\r\nimport { login } from './features/userSlice'\r\nimport { useDispatch } from 'react-redux'\r\nfunction Signup() {\r\n    const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [fName, setFName] = useState('')\r\n  const [lName, setLName] = useState('')\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n       \r\n  const signUp = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!fName) {\r\n      return alert('Please enter a first name!')\r\n    }\r\n    if (!lName) {\r\n      return alert('Please enter a last name!')\r\n    }\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userAuth) => {\r\n        userAuth.user\r\n          .updateProfile({\r\n            displayName: fName,\r\n          })\r\n          .then(() => {\r\n            dispatch(\r\n              login({\r\n                email: userAuth.user.email,\r\n                uid: userAuth.user.uid,\r\n                displayName: fName,\r\n              })\r\n            )\r\n            history.push('/teslaaccount')\r\n          })\r\n      })\r\n      .catch((error) => alert(error.message))\r\n  }\r\n   \r\n    return (\r\n        <div className='signup'>\r\n        <div className='signup__header'>\r\n          <div className='signup__logo'>\r\n            <Link to='/'>\r\n              {' '}\r\n              <img\r\n                src='https://assets.website-files.com/5e8fceb1c9af5c3915ec97a0/5ec2f037975ed372da9f6286_Tesla-Logo-PNG-HD.png'\r\n                alt=''\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div className='signup__language'>\r\n            <LanguageOutlinedIcon /> <span>en-US</span>\r\n          </div>\r\n        </div>\r\n        <div className='signup__info'>\r\n          <h1>Create Account</h1>\r\n          <form className='signup__form'>\r\n            <label htmlFor='fName'>First Name</label>\r\n            <input\r\n              id='fName'\r\n              type='text'\r\n              value={fName}\r\n              onChange={(e) => setFName(e.target.value)}\r\n            />\r\n            <label htmlFor='lName'>Last Name</label>\r\n            <input\r\n              id='lName'\r\n              type='text'\r\n              value={lName}\r\n              onChange={(e) => setLName(e.target.value)}\r\n            />\r\n            <label htmlFor='email'>Email Address</label>\r\n            <input\r\n              id='email'\r\n              type='email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              id='password'\r\n              type='password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button type='submit' onClick={signUp}>\r\n              Create Account\r\n            </button>\r\n          </form>\r\n          <div className='signup__divider'>\r\n            <hr /> <span>OR</span> <hr />\r\n          </div>\r\n          <Link to='/login'>\r\n            <button>Sign In</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react'\r\nimport ButtonPrimary from './ButtonPrimary'\r\nimport ButtonSecondary from './ButtonSecondary'\r\nimport './Car.css'\r\n\r\nfunction Car({ imgSrc, model, testDrive }) {\r\n  return (\r\n    <div className='car'>\r\n      <div className='car__image'>\r\n        <img src={imgSrc} alt='' />\r\n      </div>\r\n      <h2 className='car__model'>{model}</h2>\r\n      <div className='car__actions'>\r\n        <ButtonPrimary name='order' />\r\n        {testDrive && <ButtonSecondary name='test drive' />}\r\n      </div>\r\n      <p className='car__info'>\r\n        <span>Request a Call</span> to speak with a product specialist, value\r\n        your trade-in or apply for leasing\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Car","import React from 'react'\r\nimport './TeslaAccount.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout, selectUser } from './features/userSlice'\r\nimport Car from './Car'\r\nimport { auth } from './firebase'\r\n\r\nfunction TeslaAccount({ isMenuOpen, setIsMenuOpen }) {\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const logoutOfApp = () => {\r\n    auth\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch(logout())\r\n        history.push('/')\r\n      })\r\n      .catch((error) => alert(error.message))\r\n  }\r\n\r\n  return (\r\n    <div className='teslaAccount'>\r\n      <div className='teslaAccount__header'>\r\n        <div className='teslaAccount__logo'>\r\n          <Link to='/'>\r\n            <img\r\n              src='https://assets.website-files.com/5e8fceb1c9af5c3915ec97a0/5ec2f037975ed372da9f6286_Tesla-Logo-PNG-HD.png'\r\n              alt=''\r\n            />\r\n          </Link>\r\n        </div>\r\n        <div className='teslaAccount__links'>\r\n          <Link to='/teslaaccount'>Model S</Link>\r\n          <Link to='/teslaaccount'>Model 3</Link>\r\n          <Link to='/teslaaccount'>Model X</Link>\r\n          <Link to='/teslaaccount'>Model Y</Link>\r\n          <Link to='/teslaaccount'>Solar Roof</Link>\r\n          <Link to='/teslaaccount'>Solar Panels</Link>\r\n          <Link to='/teslaaccount'>Shop</Link>\r\n          <Link to='/teslaaccount'>Tesla Account</Link>\r\n          <Link onClick={logoutOfApp}>Log out</Link>\r\n          <div\r\n            className='teslaAccount__menu'\r\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n          >\r\n            {isMenuOpen ? (\r\n              <CloseIcon className='teslaAccount__closeMenu' />\r\n            ) : (\r\n              <MenuIcon />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='teslaAccount__info'>\r\n        <div className='teslaAccount__person'>\r\n          <h4>{user?.displayName + \"'s\"} Tesla</h4>\r\n        </div>\r\n        <div className='teslaAccount__infoRight'>\r\n          <Link>Home</Link>\r\n          <Link>Account</Link>\r\n          <Link>History</Link>\r\n          <Link onClick={logoutOfApp}>Sign out</Link>\r\n        </div>\r\n      </div>\r\n      <div className='teslaAccount__car'>\r\n        <Car\r\n          imgSrc='https://www.tesla.com/tesla_theme/assets/img/mytesla/v3/header-nocar-models@2x.jpg?20170815'\r\n          model='model s'\r\n          testDrive\r\n        />\r\n        <Car\r\n          imgSrc='https://www.tesla.com/tesla_theme/assets/img/mytesla/v3/header-nocar-modelx@2x.jpg?20170815'\r\n          model='model x'\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TeslaAccount","import React, { useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport Header from './Header'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom'\r\nimport Menu from './Menu'\r\nimport HeaderBlock from './HeaderBlock'\r\nimport Login from './Login'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, logout, selectUser } from './features/userSlice'\r\nimport Signup from './Signup'\r\nimport TeslaAccount from './TeslaAccount'\r\nimport { auth } from './firebase'\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser)\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        // User is signed in\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n          })\r\n        )\r\n      } else {\r\n        // User is signed out\r\n        dispatch(logout())\r\n      }\r\n    })\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Router>\r\n      <div className='app'>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Header isMenuOpen={isMenuOpen} setIsMenuOpen={setIsMenuOpen} />\r\n            {isMenuOpen && <Menu />}\r\n            <HeaderBlock />\r\n          </Route>\r\n          <Route exact path='/login'>\r\n            {user ? <Redirect to='/teslaaccount' /> : <Login />}\r\n          </Route>\r\n          <Route exact path='/signup'>\r\n            <Signup />\r\n          </Route>\r\n          <Route exact path='/teslaaccount'>\r\n            {!user ? (\r\n              <Redirect to='/login' />\r\n            ) : (\r\n              <>\r\n                <TeslaAccount\r\n                  isMenuOpen={isMenuOpen}\r\n                  setIsMenuOpen={setIsMenuOpen}\r\n                />\r\n                {isMenuOpen && <Menu />}\r\n              </>\r\n            )}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}